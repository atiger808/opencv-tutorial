# _*_ coding: utf-8 _*_
# @Time     : 2019/9/17 15:49
# @Author   : Ole211
# @Site     : 
# @File     : Harris角点检测.py    
# @Software : PyCharm
'''
一、引言：关于兴趣点（interest points）
在图像处理和计算机视觉邻域， 兴趣点(interest points), 或称关键点(keypoints), 特征点（feature points）被大量用于解决物体识别， 图像识别，
图像匹配， 视觉跟踪， 三维重建等一系列问题。我们不在观察整幅图像， 而是选择某些特征点 然后对他们进行局部有的放矢的分析。如果能检测到足够多的
点， 同时他们的区分度很高， 并且可以精确定位稳定的特征， 那么这个方法就有食欲价值

图像特征的点可分为以下三种：
1. 边缘
2， 角点
3， 斑点（Blobs）(感兴趣区域)

其中角点是个特殊的存在。他们在图像中可以轻易的定位， 同时它们在人造物体场景中， 如门窗， 桌子等随处可见。
因为角点位于两条边缘的交点处， 代表两个边缘变化的方向上的点， 所以我们是可以精确定位的二维特征， 甚至可达到亚像素的精度， 且图像梯度有很高的变化， 这种变化是
可以用来帮助检测角点的。需要注意的是， 角点与位于相同强度区域上的点不同， 与物体轮廓上的点也不同， 因为轮廓点难以在相同的其他物体上精确定位

二， 角点检测算法的分类
在当前的图像处理邻域， 角点检测算法可以归纳为三类：
1. 基于灰度图像的角点检测
2. 基于二值图像的角点检测
3. 基于轮廓曲线的角点检测

而基于灰度图像的角点检测有可分为：基于梯度， 基于模板， 基于模板梯度组合 三类方法， 其中基于模板的方法主要
考虑像素邻域点的灰度变化， 即图像亮度的变化， 将于邻点亮度对比足够大的定义为角点 。常见的基于模板的角点
检测算法有Kitchen-Rosenfield角点检测算法， Harris角点检测算法， KLT角点检测算法以及SUSAN角点检测算法。
和其他角点检测算法相比， SUSAN角点检测算法具有算法简单， 位子准确， 抗噪声能力强等特点。

三， 角点的定义
如果有一点在任意方向的一个微笑变动都会引起灰度很大的变化， 那么我们就把他称之为角点
关于角点的具体描述可以有几种：
1. 一阶导数（即灰度的梯度）的局部最大所对应的像素点
2， 两条及两条以上边缘的点
3，图像中的梯度值和梯度方向的变化速率都很高的点
4，角点处的一阶导数最大， 二阶导数为0， 指示物体边缘变化不连续的方向

四，Harris角点检测原理
对于角点检测， Harris依据以下直观判断
角点：窗口移动在水平， 竖直两个方向上变化均较大的点， 即lx, ly都比较
边界：仅在水平， 或者仅在竖直方向有较大的变化量， 另一个没有什么变化， 即lx和ly中只有一个比较大
平坦地区： 在水平， 竖直方向的变化量比较小。 即lx, ly都比较小

五， 函数及代码
OpenCV中的函数cv2.cornerHarris()可以用来进行角点检测
cornerHarris(src, blockSize, ksize, k, dst=None, borderType=None)
src: 输入图像， 单通道8位或float32
blockSize: 角点检测中药考虑的邻域大小
ksize: Sobel求到中使用的窗口大小
k: Harris角点检测方程中的自由参数， 取值参数为【0.04， 0.06】
'''

import cv2
import numpy as np

img = cv2.imread('d:\\img\\cal\\calibration5_dst.jpg')
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2.imshow('gray', gray)
gray = np.float32(gray)
# 输入图像必须是单通道， 最后一个参数取值范围在[0.04, 0.06]
dst = cv2.cornerHarris(gray, 2, 3, 0.04)
cv2.imshow('harris', dst)
# 膨胀操作， 让检测到的角点更清晰
dst = cv2.dilate(dst, None)
cv2.imshow('dilate', dst)
# 阈值的最佳值
img[dst>0.01*dst.max()] = [0, 0, 255]
cv2.imshow('img', img)

cv2.waitKey()
cv2.destroyAllWindows()